Description: Add compatibility with OpenSSL >= 1.1.0
Bug-Debian: http://bugs.debian.org/858436
Applied-Upstream: 2.4.0
Last-Update: 2017-11-16

diff --git a/dcpp/CryptoManager.cpp b/dcpp/CryptoManager.cpp
--- a/dcpp/CryptoManager.cpp
+++ b/dcpp/CryptoManager.cpp
@@ -101,10 +109,15 @@
                 };
 
         if(dh) {
-            dh->p = BN_bin2bn(dh4096_p, sizeof(dh4096_p), 0);
-            dh->g = BN_bin2bn(dh4096_g, sizeof(dh4096_g), 0);
-
-            if (!dh->p || !dh->g) {
+            BIGNUM *p = BN_bin2bn(dh4096_p, sizeof(dh4096_p), 0);
+            BIGNUM *g = BN_bin2bn(dh4096_g, sizeof(dh4096_g), 0);
+#if OPENSSL_VERSION_NUMBER < 0x10100000L
+            dh->p = p;
+            dh->g = g;
+#else
+            DH_set0_pqg(dh, p, NULL, g);
+#endif
+            if(!p || !g) {
                 dh.reset();
             } else {
                 SSL_CTX_set_options(serverContext, SSL_OP_SINGLE_DH_USE);
diff --git a/dcpp/SSLSocket.cpp b/dcpp/SSLSocket.cpp
--- a/dcpp/SSLSocket.cpp
+++ b/dcpp/SSLSocket.cpp
@@ -37,6 +37,13 @@
     waitConnected(0);
 }
 
+#if OPENSSL_VERSION_NUMBER < 0x10002000L
+static inline int SSL_is_server(SSL *s)
+{
+    return s->server;
+}
+#endif
+
 bool SSLSocket::waitConnected(uint32_t millis) {
     if(!ssl) {
         if(!Socket::waitConnected(millis)) {
@@ -54,9 +61,9 @@
     }
 
     while(true) {
-        int ret = ssl->server?SSL_accept(ssl):SSL_connect(ssl);
+        int ret = SSL_is_server(ssl)?SSL_accept(ssl):SSL_connect(ssl);
         if(ret == 1) {
-            dcdebug("Connected to SSL server using %s as %s\n", SSL_get_cipher(ssl), ssl->server?"server":"client");
+            dcdebug("Connected to SSL server using %s as %s\n", SSL_get_cipher(ssl), SSL_is_server(ssl)?"server":"client");
             return true;
         }
         if(!waitWant(ret, millis)) {
@@ -116,7 +123,7 @@
 
 int SSLSocket::read(void* aBuffer, int aBufLen) {
     if(!ssl) {
-        return -1;
+        return 0;
     }
     int len = checkSSL(SSL_read(ssl, aBuffer, aBufLen));
 
